"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[34763],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var t=i(296540);const s={},a=t.createContext(s);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},735024:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var t=i(474848),s=i(28453);const a={id:"docs-chain-important-concepts",title:"Important Concepts",hide_title:!0,slug:"./important-concepts",displayed_sidebar:"pushChainSidebar",sidebar_position:3,image:"/assets/docs/previews/docs_chain--important_concepts.png"},r="Important Concepts",o={id:"chain/docs-chain-important-concepts",title:"Important Concepts",description:"Before diving into the SDK and how you can integrate Push Chain to build the new wave of consumer-centric applications, let's review what Push Chain is.",source:"@site/docs/chain/03-Important-Concepts.mdx",sourceDirName:"chain",slug:"/chain/important-concepts",permalink:"/push-website/pr-preview/pr-1073/docs/chain/important-concepts",draft:!1,unlisted:!1,editUrl:"https://github.com/push-protocol/push-website/blob/main/docs/chain/03-Important-Concepts.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"docs-chain-important-concepts",title:"Important Concepts",hide_title:!0,slug:"./important-concepts",displayed_sidebar:"pushChainSidebar",sidebar_position:3,image:"/assets/docs/previews/docs_chain--important_concepts.png"},sidebar:"pushChainSidebar",previous:{title:"Quickstart",permalink:"/push-website/pr-preview/pr-1073/docs/chain/quickstart"},next:{title:"Use Cases of Push Chain",permalink:"/push-website/pr-preview/pr-1073/docs/chain/use-cases"}},c={},l=[{value:"What is the Transaction Category?",id:"what-is-the-transaction-category",level:2},{value:"How many recipients can a transaction have?",id:"how-many-recipients-can-a-transaction-have",level:2},{value:"What can the transaction payload contain?",id:"what-can-the-transaction-payload-contain",level:2},{value:"What is <code>UniversalAccount</code>?",id:"what-is-universalaccount",level:2},{value:"Example Usage",id:"example-usage",level:3},{value:"What is <code>UniversalSigner</code>?",id:"what-is-universalsigner",level:2},{value:"Key Features of <code>UniversalSigner</code>",id:"key-features-of-universalsigner",level:3},{value:"Example Usage",id:"example-usage-1",level:3}];function h(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Head:i}=n;return i||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Head",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"important-concepts",children:"Important Concepts"}),"\n",(0,t.jsx)(n.p,{children:"Before diving into the SDK and how you can integrate Push Chain to build the new wave of consumer-centric applications, let's review what Push Chain is."}),"\n",(0,t.jsx)(i,{children:(0,t.jsx)("title",{children:"Important Concepts | Push Chain | Push Documentation"})}),"\n",(0,t.jsx)(n.h2,{id:"what-is-the-transaction-category",children:"What is the Transaction Category?"}),"\n",(0,t.jsx)(n.p,{children:"The transaction category in Push Chain refers to the type of operation the transaction represents, such as email, blog, notifications, or other specific use cases."}),"\n",(0,t.jsx)(n.p,{children:"It helps identify and organize transactions within the network, allowing precise handling and retrieval tailored to their purpose."}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note"}),": Each transaction must have ",(0,t.jsx)(n.em,{children:"one"})," category assigned to it."]}),"\n",(0,t.jsx)(n.h2,{id:"how-many-recipients-can-a-transaction-have",children:"How many recipients can a transaction have?"}),"\n",(0,t.jsxs)(n.p,{children:["A transaction can have ",(0,t.jsx)(n.strong,{children:"at least 1 recipient"}),", but there is no upper limit to the number of recipients."]}),"\n",(0,t.jsxs)(n.p,{children:["Recipients can be wallets on ",(0,t.jsx)(n.strong,{children:"multiple chains"})," and do not need to all be on the same chain. For example, a transaction can include recipients on Ethereum, Solana, or other supported blockchains."]}),"\n",(0,t.jsx)(n.h2,{id:"what-can-the-transaction-payload-contain",children:"What can the transaction payload contain?"}),"\n",(0,t.jsxs)(n.p,{children:["The transaction payload can be ",(0,t.jsx)(n.strong,{children:"anything"}),", as long as it is represented in bytes."]}),"\n",(0,t.jsxs)(n.p,{children:["The data payload can include any information that suits your application's needs, provided it is associated with a valid ",(0,t.jsx)(n.strong,{children:"transaction category"}),". For example:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["An ",(0,t.jsx)(n.strong,{children:"email"})," as part of a messaging application."]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.strong,{children:"social media post"}),", like a text, image, or video."]}),"\n",(0,t.jsxs)(n.li,{children:["A ",(0,t.jsx)(n.strong,{children:"notification"})," or event trigger for your application."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Game state data"})," for a gaming app."]}),"\n"]}),"\n",(0,t.jsxs)(n.h2,{id:"what-is-universalaccount",children:["What is ",(0,t.jsx)(n.code,{children:"UniversalAccount"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"UniversalAccount"})," is a chain-agnostic way of representing an address, designed to work seamlessly across multiple blockchain ecosystems. It abstracts the details of the underlying blockchain, enabling developers to interact with addresses in a unified manner, regardless of the chain they belong to."]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage",children:"Example Usage"}),"\n",(0,t.jsx)(n.p,{children:"Here's an example of how to use a UniversalAccount to represent a recipient on the Solana blockchain:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const recipients = [\n  createUniversalAccount({\n    chain: CONSTANTS.CHAIN.SOLANA,\n    chainId: CONSTANTS.CHAIN_ID.SOLANA.DEVNET,\n    address: 'ySYrGNLLJSK9hvGGpoxg8TzWfRe8ftBtDSMECtx2eJR',\n  }),\n];\n"})}),"\n",(0,t.jsxs)(n.h2,{id:"what-is-universalsigner",children:["What is ",(0,t.jsx)(n.code,{children:"UniversalSigner"}),"?"]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"UniversalSigner"})," is a chain-agnostic way of representing a signer, designed to facilitate signing operations across multiple blockchain ecosystems. It abstracts the underlying blockchain-specific details, providing a unified approach to handle signing logic, regardless of the chain involved."]}),"\n",(0,t.jsxs)(n.h3,{id:"key-features-of-universalsigner",children:["Key Features of ",(0,t.jsx)(n.code,{children:"UniversalSigner"})]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Chain-Agnostic Design"}),": Supports multiple blockchains like Ethereum, Solana, Push Chain, or any other chain, enabling a consistent signing experience across chains."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Unified Signing Interface"}),": Offers a standardized ",(0,t.jsx)(n.code,{children:"signMessage"})," function, making it easy to sign messages in a multi-chain environment."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Extensibility"}),": Its structure allows for integrating new chains without changing the existing implementation."]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example-usage-1",children:"Example Usage"}),"\n",(0,t.jsxs)(n.p,{children:["Here's an example of how to define a ",(0,t.jsx)(n.code,{children:"UniversalSigner"})," for the Ethereum blockchain using the ",(0,t.jsx)(n.code,{children:"viem"})," library:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-typescript",children:"const privateKey = generatePrivateKey(); // Replace it with your private key generation logic\nconst account = privateKeyToAccount(privateKey);\n\n// Create Signer. Defaults to Ethereum Sepolia\nconst signer = createUniversalSigner({\n  address: account.address,\n  signMessage: async (data) =>\n    hexToBytes(await account.signMessage({ message: { raw: data } })),\n});\n"})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);