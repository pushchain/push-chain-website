"use strict";
(self["webpackChunkpush_chain_website"] = self["webpackChunkpush_chain_website"] || []).push([[27797],{

/***/ 625315:
/***/ ((module) => {

module.exports = /*#__PURE__*/JSON.parse('{"title":"Getting Started with Push SDK: Socket APIüîî","description":"Cover image of Getting Started with Push SDK: Socket APIüîî","frontMatter":{"slug":"geting-started-with-push-sdk-socket-api","title":"Getting Started with Push SDK: Socket APIüîî","authors":["push"],"image":"./cover-image.webp","text":"The Socket API is a package that helps you connect to the Push backend using WebSockets, built on top of Socket.IO With this API, you can easily subscribe to real-time notifications and updates from the Push network.","tags":["Web3","Blockchain","Blockchain Development","Developer"]},"content":{"id":"geting-started-with-push-sdk-socket-api","metadata":{"permalink":"/push-chain-website/pr-preview/pr-1067/blog/geting-started-with-push-sdk-socket-api","source":"@site/blog/2023-03-01-push-sdk/index.md","title":"Getting Started with Push SDK: Socket APIüîî","description":"Cover image of Getting Started with Push SDK: Socket APIüîî","date":"2023-03-01T00:00:00.000Z","formattedDate":"March 1, 2023","tags":[{"label":"Web3","permalink":"/push-chain-website/pr-preview/pr-1067/blog/tags/web-3"},{"label":"Blockchain","permalink":"/push-chain-website/pr-preview/pr-1067/blog/tags/blockchain"},{"label":"Blockchain Development","permalink":"/push-chain-website/pr-preview/pr-1067/blog/tags/blockchain-development"},{"label":"Developer","permalink":"/push-chain-website/pr-preview/pr-1067/blog/tags/developer"}],"readingTime":3.0533333333333332,"hasTruncateMarker":true,"authors":[{"name":"Push Protocol","url":"https://x.com/PushChain","imageURL":"/assets/blog/authors/authorpush.png","key":"push"}],"frontMatter":{"slug":"geting-started-with-push-sdk-socket-api","title":"Getting Started with Push SDK: Socket APIüîî","authors":["push"],"image":"./cover-image.webp","text":"The Socket API is a package that helps you connect to the Push backend using WebSockets, built on top of Socket.IO With this API, you can easily subscribe to real-time notifications and updates from the Push network.","tags":["Web3","Blockchain","Blockchain Development","Developer"]},"unlisted":false,"prevItem":{"title":"February Monthly Recap üöÄ","permalink":"/push-chain-website/pr-preview/pr-1067/blog/february-monthly-recap"},"nextItem":{"title":"Launching The Future of Web3 Messaging with Push Chat & Push Group ChatüöÄ","permalink":"/push-chain-website/pr-preview/pr-1067/blog/launching-the-future-of-web3-messaging-with-push-chat-and-push-group-chat"}},"content":"![Cover image of Getting Started with Push SDK: Socket APIüîî](./cover-image.webp)\\n\\n<!--truncate-->\\n\\nThe Socket API is a package that helps you connect to the Push backend using WebSockets, built on top of <a href=\\"https://socket.io/docs/v4/client-api/\\"><b>Socket.IO</b></a>. With this API, you can easily subscribe to real-time notifications and updates from the Push network.\\n\\nIn this article, we‚Äôll go over the PUSH-SDK Socket API and how to use it in your dApp.\\n\\nimport { ABlock } from \\"@site/src/css/SharedStyling\\";\\n\\n:::caution\\nSocket API is deprecated. Push has revamped it\'s socket API into stream API which is more versatile and developer friendly, click on the link below to learn more üëá.\\n:::\\n\\n<ABlock href=\\"https://comms.push.org/docs/chat/stream-chat\\" title=\\"Link to learn more about Push Stream API\\">Learn about Push Stream API</ABlock>\\n\\n## Note on Addresses\\n\\nIn any of the specified methods (unless explicitly stated otherwise), you can use either CAIP format (specifically CAIP-10) or the ETH address format.\\n\\nRecall that CAIP, or Chain Agnostic Improvement Proposal, is a way to describe standards for blockchain projects that are not specific to a single chain. It was developed by the Ethereum Improvement Proposal (EIP) process and is used to identify and encode information about Ethereum addresses, contract addresses, and other crypto-assets. For example, an ETH mainnet address would be in the form:\\n\\n<b>eip155:1:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb</b><br/><br/>\\n\\n<blockquote>The sockets API uses CAIP-10 (but defaults to the Ethereum address format), which is a specific proposal within the CAIP specification that focuses on the identification of blockchain addresses. It defines a format for representing addresses in a way that is both chain-agnostic and human-readable.</blockquote>\\n\\nThe ETH address format is supported for backwards compatibility. For example, an ETH mainnet address would be in the form <b>0xab16a96d359ec26a11e</b>\\n\\n## Creating a Socket Connection\\n\\nTo create a socket connection, you‚Äôll need to create a socket connection object.\\n\\n```js\\ncreateSocketConnection(options: SocketConnectionOptions): SocketConnection\\n```\\n\\nYou can use the <b>createSocketConnection</b> method to create a socket connection object. This method takes an options object as an argument, which allows you to specify the following parameters:\\n\\n- <b>user</b> (<b>string</b>, required): The user account address, in <a href=\\"https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-10.md#test-cases\\">CAIP</a> format.\\n- <b>env</b> (<b>string</b>, optional, default: <b>\'prod\'</b>): The API environment to connect to. Can be <b>\'prod\'</b>, <b>\'staging\'</b>, or <b>\'dev\'</b>.\\n- <b>socketOptions</b> (<b>object</b>, optional): Options to pass to <a href=\\"https://socket.io/docs/v4/client-options/\\">SocketIO</a>.\\n\\nThis method returns a <b>SocketConnection</b> object that you can use to connect, disconnect, and subscribe to events.\\n\\n## For Notifications\\n\\nTo create a socket connection for notifications, you‚Äôll need to create a socket connection object.\\n\\n```js\\nconst pushSDKSocket = createSocketConnection({\\n  user: \'eip155:11155111:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb\', // CAIP-10 format\\n  env: \'staging\',\\n  socketOptions: { autoConnect: false },\\n});\\n```\\n\\n## For Push Chat\\n\\nTo create a socket connection for chat, you should define the socket type as ‚Äúchat‚Äù when instantiating the socket client. The user address can be in any format, including non-CAIP-10 formats.\\n\\n```js\\nconst pushSDKSocket = createSocketConnection({\\n  user: \'0xFd6C2fE69bE13d8bE379CCB6c9306e74193EC1A9\',\\n  env: \'staging\',\\n  apiKey:\\n    \'jVPMCRom1B.iDRMswdehJG7NpHDiECIHwYMMv6k2KzkPJscFIDyW8TtSnk4blYnGa8DIkfuacU0\',\\n  socketType: \'chat\',\\n  socketOptions: { autoConnect: true, reconnectionAttempts: 3 },\\n});\\n```\\n\\nThis method takes an options object as an argument, which allows you to specify the following parameters:\\n\\n- <b>user</b> (<b>string</b>, required): The user account address.\\n- <b>env</b> (<b>string</b>, optional, default: <b>\'prod\'</b>): The API environment to connect to. Can be <b>\'prod\'</b>, <b>\'staging\'</b>, or <b>\'dev\'</b>.\\n- <b>apiKey</b> (<b>string</b>, optional): The API key to use for authentication.\\n- <b>socketType</b> (<b>string</b>, optional, default: <b>\'notification\'</b>): The type of socket connection to create. Can be <b>\'notification\'</b> or <b>\'chat\'</b>.\\n- <b>socketOptions</b> (<b>object</b>, optional): Options to pass to <a href=\\"https://socket.io/docs/v4/client-options/\\">SocketIO</a>.\\n\\nThis method returns a <b>SocketConnection</b> object that you can use to connect, disconnect, and subscribe to events.\\n\\n## Connecting and Disconnecting\\n\\nOnce you have a <b>SocketConnection</b> object, you can use the <b>connect</b> and <b>disconnect</b> methods to establish or close the connection:\\n\\n```js\\nSocketConnection.connect(): void\\n```\\n\\nUse the <b>connect</b> method to establish a connection to the backend.\\n\\n```js\\nSocketConnection.disconnect(): void\\n```\\n\\nUse the <b>disconnect</b> method to close the connection to the backend.\\n\\n## Subscribing to Events\\n\\nOnce you have a connection, you can subscribe to events to receive updates in real-time.\\n\\n```js\\nSocketConnection.on(event: SocketEvent, callback: (data: any) => void):\\n```\\n\\nUse the <b>on</b> method to subscribe to a socket event. This method takes an event name and a callback function as arguments. The callback function will be called whenever the specified event is triggered.\\n\\nThe following events are supported:\\n\\n- <b>EVENTS.CONNECT:</b> Triggered when the socket connection is established.\\n- <b>EVENTS.DISCONNECT:</b> Triggered when the socket connection is closed.\\n- <b>EVENTS.USER_FEEDS:</b> Triggered when a new notification is received by the user after the last socket connection.\\n- <b>EVENTS.USER_SPAM_FEEDS:</b> Triggered when a new spam notification is received by the user after the last socket connection.\\n- <b>EVENTS.CHAT_RECEIVED_MESSAGE:</b> Triggered when a new chat message is received.\\n\\nExample:\\n\\n```js\\nconst pushSDKSocket = createSocketConnection({\\n  user: \'eip155:11155111:0xab16a96d359ec26a11e2c2b3d8f8b8942d5bfcdb\',\\n  env: \'staging\',\\n  socketOptions: { autoConnect: false },\\n});\\npushSDKSocket.connect();\\npushSDKSocket.on(EVENTS.CONNECT, () => {\\n  console.log(\'Connected to socket!\');\\n});\\npushSDKSocket.on(EVENTS.DISCONNECT, () => {\\n  console.log(\'Disconnected from socket!\');\\n});\\npushSDKSocket.on(EVENTS.USER_FEEDS, (feedItem) => {\\n  console.log(`Received notification: ${feedItem.title}`);\\n});\\npushSDKSocket.on(EVENTS.USER_SPAM_FEEDS, (feedItem) => {\\n  console.log(`Received spam notification: ${feedItem.title}`);\\n});\\npushSDKSocket.on(EVENTS.CHAT_RECEIVED_MESSAGE, (message) => {\\n  console.log(`Received chat message: ${message.text}`);\\n});\\n```\\n\\n<center><b>.   .   .</b></center>\\n\\nThat‚Äôs it! You now know how to use the main features of the Push Protocol Socket API to add push notification functionality to your applicationüéâ\\n\\nWe‚Äôll cover other parts of the Push SDK in coming posts so stay tuned!\\n\\n- [Push Protocol SDK documentation here](https://comms.push.org/docs/) ‚Äî if you‚Äôd like more reference material to chew on.\\n- [Push SDK on GitHub](https://github.com/push-protocol/push-sdk)\\n- [Our Discord](https://discord.gg/pushprotocol) ‚Äî we‚Äôve got devs ready to give your project whatever support and consultation you need.\\n- [Push developer docs](https://comms.push.org/docs/ \'Push developer docs\') to get started on building right away!\\n\\n#PoweredbyPush"}}');

/***/ })

}]);