"use strict";(self.webpackChunkpush_website=self.webpackChunkpush_website||[]).push([[91093],{991093:(e,a,t)=>{t.d(a,{offchainLookup:()=>w,offchainLookupSignature:()=>y});var r=t(54740),s=t(115512),n=t(630666),o=t(452484);class c extends n.C{constructor({callbackSelector:e,cause:a,data:t,extraData:r,sender:s,urls:n}){super(a.shortMessage||"An error occurred while fetching for an offchain result.",{cause:a,metaMessages:[...a.metaMessages||[],a.metaMessages?.length?"":[],"Offchain Gateway Call:",n&&["  Gateway URL(s):",...n.map((e=>`    ${(0,o.ID)(e)}`))],`  Sender: ${s}`,`  Data: ${t}`,`  Callback selector: ${e}`,`  Extra data: ${r}`].flat()}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupError"})}}class u extends n.C{constructor({result:e,url:a}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,o.ID)(a)}`,`Response: ${(0,s.A)(e)}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupResponseMalformedError"})}}class l extends n.C{constructor({sender:e,to:a}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${a}`,`OffchainLookup sender address: ${e}`]}),Object.defineProperty(this,"name",{enumerable:!0,configurable:!0,writable:!0,value:"OffchainLookupSenderMismatchError"})}}var d=t(621166),i=t(321465),f=t(137744),h=t(73984),p=t(334188),b=t(624331);const y="0x556f1830",m={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function w(e,{blockNumber:a,blockTag:t,data:s,to:n}){const{args:o}=(0,i.W)({data:s,abi:[m]}),[u,d,b,y,w]=o,{ccipRead:k}=e,O=k&&"function"==typeof k?.request?k.request:g;try{if(!(0,h.h)(n,u))throw new l({sender:u,to:n});const s=await O({data:b,sender:u,urls:d}),{data:o}=await(0,r.T)(e,{blockNumber:a,blockTag:t,data:(0,p.xW)([y,(0,f.h)([{type:"bytes"},{type:"bytes"}],[s,w])]),to:n});return o}catch(x){throw new c({callbackSelector:y,cause:x,data:s,extraData:w,sender:u,urls:d})}}async function g({data:e,sender:a,urls:t}){let r=new Error("An unknown error occurred.");for(let o=0;o<t.length;o++){const c=t[o],l=c.includes("{data}")?"GET":"POST",i="POST"===l?{data:e,sender:a}:void 0;try{const t=await fetch(c.replace("{sender}",a).replace("{data}",e),{body:JSON.stringify(i),method:l});let n;if(n=t.headers.get("Content-Type")?.startsWith("application/json")?(await t.json()).data:await t.text(),!t.ok){r=new d.Ci({body:i,details:n?.error?(0,s.A)(n.error):t.statusText,headers:t.headers,status:t.status,url:c});continue}if(!(0,b.q)(n)){r=new u({result:n,url:c});continue}return n}catch(n){r=new d.Ci({body:i,details:n.message,url:c})}}throw r}}}]);